import requests

def ia(prompt):
    response = requests.post(
        "http://localhost:11434/api/generate",
        json={
            "model": "ata-mistral",
            "prompt": prompt,
            "stream": False,
    })
    
    return response.json()["response"]

def analyze_markdown_content(activity_file_content):
    prompt = f"""
    Voc√™ √© um assistente encarregado de analisar um arquivo Markdown com anota√ß√µes de atividades realizadas no dia.

    Seu objetivo √© **organizar e estruturar o conte√∫do**, mantendo a hierarquia de t√≥picos e subt√≥picos, e identificando os seguintes elementos:

    - Blocos de c√≥digo (dentro de tr√™s crases ```), n√£o crie novos c√≥digos, apenas organize os existentes.
    - Refer√™ncias a imagens (no formato `![descri√ß√£o](caminho)`)
    - Descri√ß√µes t√©cnicas ou textuais
    - T√≥picos e subt√≥picos com indenta√ß√£o clara

    ‚ö†Ô∏è **N√£o formate como ATA ainda. N√£o use linguagem formal ainda. Apenas organize.**

    Apresente a estrutura organizada do seguinte conte√∫do Markdown:

    {activity_file_content}
    """
    
    return ia(prompt)

def generate_formal_ata_from_analysis(organized_content, ata_date):
    prompt = f"""
    Voc√™ √© um assistente encarregado de gerar uma **ATA de atividades formal e clara**, com base no conte√∫do organizado a seguir.

    Siga estas diretrizes com rigor:

    ---

    ### üéØ Objetivo
    Redigir a ATA em portugu√™s formal, mantendo toda a estrutura e informa√ß√µes t√©cnicas presentes.

    ---

    ### üß≠ Instru√ß√µes de formata√ß√£o:

    1. **Idioma**: Use sempre portugu√™s formal e claro.
    2. **Estrutura**: Mantenha a hierarquia de t√≥picos e subt√≥picos.
    3. **C√≥digo**: Preserve blocos de c√≥digo com ``` e indenta√ß√£o correta, n√£o altere o conte√∫do. Tamb√©m n√£o crie c√≥digos que n√£o est√£o no conte√∫do original.
    4. **Imagens**: Mantenha no formato `![descri√ß√£o](caminho)`
    5. **Evite repeti√ß√µes**, rodeios ou informalidades.

    ---

    ### ‚úÖ Exemplo de in√≠cio esperado:

    Durante o dia {ata_date}, foram realizadas as seguintes atividades:
    - Reuni√£o com a equipe de desenvolvimento
        - Discuss√£o sobre progresso da sprint atual e pr√≥ximos passos.
        - Implementa√ß√£o de novas funcionalidades no sistema de gest√£o de tarefas.
        - Revis√£o do c√≥digo existente para melhorias de desempenho.
        
    - Teste de integra√ß√£o do sistema de pagamentos
        - Implementa√ß√£o de testes automatizados para garantir a qualidade do c√≥digo.
        - Revis√£o e atualiza√ß√£o da documenta√ß√£o t√©cnica.
        
    Segue abaixo uma melhor descri√ß√£o das atividades realizadas:

    #### Reuni√£o com a equipe de desenvolvimento

    Discuss√£o sobre progresso da sprint atual e pr√≥ximos passos.

    ##### Implementa√ß√µes

    - Implementa√ß√£o de novas funcionalidades no sistema de gest√£o de tarefas.
    - Revis√£o do c√≥digo existente para melhorias de desempenho.
    
    
    Gere agora a ATA com base no conte√∫do abaixo:

    {organized_content}
    """
    return ia(prompt)

def generate_ata(content, ata_date):
    organized_content = analyze_markdown_content(content)
    formal_ata = generate_formal_ata_from_analysis(organized_content, ata_date)
    return formal_ata